<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Golang on Eddie Webb</title>
    <link>https://www.easyolap.cn/tags/golang/</link>
    <description>Recent content in Golang on Eddie Webb</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <lastBuildDate>Sat, 25 Aug 2018 21:44:58 +0800</lastBuildDate>
    
	<atom:link href="https://www.easyolap.cn/tags/golang/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>golang学习笔记-关于数组，切片，映射</title>
      <link>https://www.easyolap.cn/publications/golang-001/</link>
      <pubDate>Sat, 25 Aug 2018 21:44:58 +0800</pubDate>
      
      <guid>https://www.easyolap.cn/publications/golang-001/</guid>
      <description> 本文转载自：DevOps小站 官方网站，原文地址：https://www.easyolap.cn/publications/golang-001
 数组、切片和映射小结
 数组是构造切片和映射的基石。
 Go语言里切片经常用来处理数据的集合，映射用来处理具有键值对结构的数据。
 内置函数make 可以创片和映射，并指定原始的长度和容量。也可以直接使切片和映射字央量，或者使用字面量作为变量作为变量的初始值。
 切片有容量限制，不过可以使用内置的append函数扩展容量。
 映射的增长设有容量或者任何限制。
 内置函数len可以用来获取切片或映射的长度。
 内置函数cap只能用于切片。
 通过组合，可以创建多维数组和多维切片。也可以使用切片或者其他映射作为映射 的值。但是切片不能用作映射的键。
 将切片或者映射传递给函数成本很小，并且不会复制底层的数据结构。
  </description>
    </item>
    
  </channel>
</rss>