<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Home on Frank Li&#39;s blog</title>
    <link>https://www.easyolap.cn/</link>
    <description>Recent content in Home on Frank Li&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <lastBuildDate>Sat, 10 Feb 2018 18:56:13 -0500</lastBuildDate>
    
	<atom:link href="https://www.easyolap.cn/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Jenkins集成sonar使项目分析可视化 ！</title>
      <link>https://www.easyolap.cn/projects/creations/jenkinsintergrationsonar/</link>
      <pubDate>Thu, 16 Aug 2018 21:44:58 +0800</pubDate>
      
      <guid>https://www.easyolap.cn/projects/creations/jenkinsintergrationsonar/</guid>
      <description>本文转载自：DevOps小站 官方网站，原文地址：https://www.easyolap.cn/creations/JenkinsIntergrationSonar/ Jenkins 集成sonar 可以提供一个dashboard给项目成员和管理者，提供一个一目了然的项目分析情况，Sonar在代码分析是非常有用的工具。下面就具体说说如何进行集成。 实践目标 * 安装和配置jenkins中sonar插件 * 配置sonar scanner *</description>
    </item>
    
    <item>
      <title>Nexus build docker image Repository ！</title>
      <link>https://www.easyolap.cn/publications/nexus-002/</link>
      <pubDate>Thu, 16 Aug 2018 21:44:58 +0800</pubDate>
      
      <guid>https://www.easyolap.cn/publications/nexus-002/</guid>
      <description>本文转载自：DevOps小站 官方网站，原文地址：https://www.easyolap.cn/publications/nexus-002/ 一、环境准备 安装好Nexus3环境，安装方法参见地址：https://www.easyolap.cn/publications/nexus-001-install-by-docker/。 ​ 二、添加Docker镜像库用户（可选） 方法: 以管理员登录 添加用户 ( 三、</description>
    </item>
    
    <item>
      <title>Nexus install by docker！</title>
      <link>https://www.easyolap.cn/publications/nexus-001-install-by-docker/</link>
      <pubDate>Thu, 16 Aug 2018 21:44:58 +0800</pubDate>
      
      <guid>https://www.easyolap.cn/publications/nexus-001-install-by-docker/</guid>
      <description>本文转载自：DevOps小站 官方网站，原文地址：https://www.easyolap.cn/publications/nexus-001-install-by-docker/ 一、环境准备 安装docker,本文使用的版本为docker Server Version: 17.11.0-ce 定义域名和购买域名，制作私有证书或购买，本文采用已有域名，申请免费证书实现。 ​ 二、下载镜像并启协服务 ATLASSIAN_HOME=/data/nexus/ docker run -d &amp;ndash;name nexus &amp;ndash;hostname nexus &amp;ndash;user root:root &amp;ndash;restart always -v $ATLASSIAN_HOME/work:/nexus-data -p 8081:8081 -p 8082:8082 -p 6000-6010:6001-6010 -e NEXUS_CONTEXT=nexus sonatype/nexus3:3.13.0 三、修改容器</description>
    </item>
    
    <item>
      <title>linux如何成功地离线安装docker </title>
      <link>https://www.easyolap.cn/publications/docker-001/</link>
      <pubDate>Tue, 11 Dec 2018 09:00:26 +0800</pubDate>
      
      <guid>https://www.easyolap.cn/publications/docker-001/</guid>
      <description>linux如何成功地离线安装docker 系统环境： Redhat 7.2 和Centos 7.4实测成功 近期因项目需要用docker，所以记录一些相关知识，由于生产环境是不能直接连接互联网，尝试在linux中离线安装docker。 步骤 1.下载https://download.docker.com/linux/static/stable/x86_64/docker-18.09.0.tgz 2.解压将docker-18.09</description>
    </item>
    
    <item>
      <title>使用ceph-deploy 2.0.0 部署ceph </title>
      <link>https://www.easyolap.cn/publications/ceph-cluster/</link>
      <pubDate>Thu, 27 Sep 2018 21:56:26 +0800</pubDate>
      
      <guid>https://www.easyolap.cn/publications/ceph-cluster/</guid>
      <description>OpenShift Origin 3.9.0手动单机安装 1.环境 1.1 硬件 6台 Linux虚拟机： server0, server1, server2, server3 , server4, server5 每台有两块磁盘 ： /dev/vdb, /dev/vdc 每台有一块网卡 ：eth0 1.2 软件 linux版本： CentOS 7.2.1511 内核版本 ： 3.10.0-327.el7.x86_64 ceph版本： 13.2.2 ceph-deploy版本： 2.0.0 2.准备工作(所有server) 2.1 配置静态IP 10.3.14.0/24 2.2 生成ssh key # ssh-keygen 2.3 配置主机名解析 把如下内容追加到/etc/hosts: 10.3.14.19 server0 deploy 10.3.14.20 server1 10.3.14.12 server2 10.3.14.13 server3 修改所有节点的主机名，方法如下： sudo hostnamectl set-hostname server0 2.4.添加用户 下</description>
    </item>
    
    <item>
      <title>使用kubeadm安装k8s all-in-one单机测试环境 (版本1.11.1)</title>
      <link>https://www.easyolap.cn/publications/kubernetes-all-in-one/</link>
      <pubDate>Sat, 01 Sep 2018 21:56:26 +0800</pubDate>
      
      <guid>https://www.easyolap.cn/publications/kubernetes-all-in-one/</guid>
      <description>使用kubeadm安装k8s all-in-one单机测试环境 1.环境准备 使用Oracle VM VirtualBox安装虚拟机 配置双网卡，网卡1使用net方式;网卡2使用host-only（配置静态ip 192.168.134.0网段）;这样就可以实现虚拟机与宿主机，宿主机与虚拟机之前的通信。 安装centos 7操作系统（CentOS-7-x86_64-DVD-1708.iso），最小安装版。 配置国内yum</description>
    </item>
    
    <item>
      <title>golang学习笔记-关于数组，切片，映射</title>
      <link>https://www.easyolap.cn/publications/golang-001/</link>
      <pubDate>Sat, 25 Aug 2018 21:44:58 +0800</pubDate>
      
      <guid>https://www.easyolap.cn/publications/golang-001/</guid>
      <description>本文转载自：DevOps小站 官方网站，原文地址：https://www.easyolap.cn/publications/golang-001 数组、切片和映射小结 数组是构造切片和映射的基石。 Go语言里切片经常用来处理数据的集合，映射用来处理具有键值对结构的数据。 内置函数make 可以创片和映射，并指定原始的长度和容量。也可以直接使切片和映射字央量，或者使用字面量作为变量作为变量的初始值。 切片有容量限</description>
    </item>
    
    <item>
      <title>OpenShift Origin  3.9.0手动单机安装</title>
      <link>https://www.easyolap.cn/publications/openshift-001/</link>
      <pubDate>Fri, 15 Jun 2018 21:56:26 +0800</pubDate>
      
      <guid>https://www.easyolap.cn/publications/openshift-001/</guid>
      <description>OpenShift Origin 3.9.0手动单机安装 1.配置主机 修改主机名为openshift.demo.com hostnamectl set-hostname openshift.demo.com 开启SELINUX 修改/etc/selinux/config SELINUX=enforcing SELINUXTYPE=targeted 激活网络 \# nmcli con show docker0 1a211fa6-1001-4fa9-b5c8-e3b2dcf73e5a bridge docker0 ens192 f16e6b7a-e593-4722-9ae4-1bdfa1fa4b4a ethernet ens192 # nmcli con up ens192 # nmcli con mod ens192 connection.autoconnect yes # systemctl restart NetworkManager 2.安装docker 安装依赖 yum install -y wget git net-tools bind-utils iptables-services bridge-utils bash-completion 安装docker yum install -y docker 配置Docker镜像服务器 中国科技大学的镜像服务器进行加速。修改/etc/sysconfig/docker文</description>
    </item>
    
    <item>
      <title>OpenShift Origin  3.9.0手动单机安装</title>
      <link>https://www.easyolap.cn/publications/openshift-002/</link>
      <pubDate>Fri, 15 Jun 2018 21:56:26 +0800</pubDate>
      
      <guid>https://www.easyolap.cn/publications/openshift-002/</guid>
      <description>[OSEv3:children] masters nodes etcd nfs [OSEv3:vars] ansible_ssh_user=devops openshift_deployment_type=origin #因采用虚拟机部署学习 配置此选项跳过主机硬件信息检查 openshift_disable_check=disk_availability,docker_storage,memory_availability,docker_image_availability openshift_master_identity_providers=[{&amp;lsquo;name&amp;rsquo;:&amp;lsquo;htpasswd_auth&amp;rsquo;,&amp;lsquo;login&amp;rsquo;:&amp;lsquo;true&amp;rsquo;,&amp;lsquo;challenge&amp;rsquo;:&amp;lsquo;true&amp;rsquo;,&amp;lsquo;kind&amp;rsquo;:&amp;lsquo;HTPasswdPasswordIdentityProvider&amp;rsquo;,}] openshift_master_default_subdomain=okd.easyolap.cn openshift_deployment_type=origin os_firewall_use_firewalld=true [masters] server0 [etcd] server0 [nodes] server1 openshift_node_group_name=&amp;lsquo;node-config-master&amp;rsquo; server2 openshift_node_group_name=&amp;lsquo;node-config-compute&amp;rsquo; server3 openshift_node_group_name=&amp;lsquo;node-config-compute&amp;rsquo; [nfs] server0 安装docker sudo curl -fsSL https://get.docker.com/ | sh 问题 ：fatal: [server0]: UNREACHABLE! =&amp;gt; {&amp;ldquo;changed&amp;rdquo;: false, &amp;ldquo;msg&amp;rdquo;: &amp;ldquo;Failed to connect to the host via ssh: ssh: connect to host server0 port 22: Connection refused\r\n&amp;rdquo;, &amp;ldquo;unreachable&amp;rdquo;: true} 解决 sudo ansible-playbook openshift-ansible/playbooks/prerequisites.yml &amp;ndash;limit @/data/devops/openshift-ansible/playbooks/prerequisites.retry</description>
    </item>
    
    <item>
      <title>Mysql install by Docker！</title>
      <link>https://www.easyolap.cn/publications/mysql-by-docker/</link>
      <pubDate>Mon, 31 Jul 2017 21:44:58 +0800</pubDate>
      
      <guid>https://www.easyolap.cn/publications/mysql-by-docker/</guid>
      <description>Docker运行mysql镜像 启动mysql镜像 [root@CentOS ~]# docker run -d -e MYSQL_ROOT_PASSWORD=admin &amp;ndash;name mysql -v /data/mysql/etc:/etc/mysql/conf.d -v /data/mysql/data:/var/lib/mysql -v /etc/localtime:/etc/localtime:ro mysql 说明： 1.把数据文件存贮在宿主机中的/data/mysql/data目录下，所以挂载/data/mysql/data到/var/lib/mysql 2.采用宿主机中的配置启动mysql服务，所以挂载 /data/mysql/etc到/etc/mysql/conf.d 配置文件见下文的my.cnf文件 3.使容器与宿主机时间同步</description>
    </item>
    
    <item>
      <title>Mysql源码安装！</title>
      <link>https://www.easyolap.cn/publications/mysql-src-install/</link>
      <pubDate>Mon, 31 Jul 2017 21:44:58 +0800</pubDate>
      
      <guid>https://www.easyolap.cn/publications/mysql-src-install/</guid>
      <description>本文转载自：DevOps小站 官方网站，原文地址：https://www.easyolap.cn/publications/mysql-by-docker/ 一、编译安装MySQL前准备工作 安装编译源码所需的工具和库 yum -y install gcc gcc-c++ ncurses-devel perl openssl-devel bison 安装cmake（记得好像从mysql 5.5开始需要cmake编译安装），可从https://cmake.org/download/ 中下载。 tar zxvf cmake-3.6.1.tar.gz cd cmake-3.6.1 ./bootstrap make &amp;amp;&amp;amp; make install 二、创建用户</description>
    </item>
    
    <item>
      <title>记录DevOps实施与推广相关知识</title>
      <link>https://www.easyolap.cn/projects/creations/devops-wiki/</link>
      <pubDate>Sat, 18 Aug 2018 12:41:05 -0500</pubDate>
      
      <guid>https://www.easyolap.cn/projects/creations/devops-wiki/</guid>
      <description>整理中，敬请期待&amp;hellip;</description>
    </item>
    
    <item>
      <title>关于我</title>
      <link>https://www.easyolap.cn/about/</link>
      <pubDate>Fri, 15 Jun 2018 08:55:31 +0800</pubDate>
      
      <guid>https://www.easyolap.cn/about/</guid>
      <description>大家好，我叫 Frank Li，是一名程序员。 我的经历 1999-2002 沈阳工程学院信息工程系 2007-2012 辽宁广播电视大学(本科，工商管理专业) 2002-2005 测试开发（东软）。 2005-2006 JAVA程序员（千像公司，互联网公司） 2006-2007 程序员（新思软件，软件外包） 2007-2008 架构师（盛生医药，合伙创业电子商务） 2009-2009 架构师（智诚祥科技，政府项目） 2010-2018 资深软件工程师，技术负责人（东软） 2018-至今 资深DevOps工程师（新炬网络） 我的技能 编程语言：JAVA,了解PHP,Pytho</description>
    </item>
    
    <item>
      <title>Search Results</title>
      <link>https://www.easyolap.cn/search/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.easyolap.cn/search/</guid>
      <description> This file exists solely to respond to /search URL with the related search layout template.
No content shown here is rendered, all content is based in the template layouts/page/search.html
Setting a very low sitemap priority will tell search engines this is not important content.
This implementation uses Fusejs, jquery and mark.js
Initial setup Search depends on additional output content type of JSON in config.toml
[outputs] home = [&amp;quot;HTML&amp;quot;, &amp;quot;JSON&amp;quot;]  Searching additional fileds To search additional fields defined in front matter, you must add it in 2 places.
Edit layouts/_default/index.JSON This exposes the values in /index.json i.e. add category
... &amp;quot;contents&amp;quot;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, &amp;quot;tags&amp;quot;:{{ .Params.tags | jsonify }}{{end}}, &amp;quot;categories&amp;quot; : {{ .Params.categories | jsonify }}, ...  Edit fuse.js options to Search static/js/search.js
keys: [ &amp;quot;title&amp;quot;, &amp;quot;contents&amp;quot;, &amp;quot;tags&amp;quot;, &amp;quot;categories&amp;quot; ]  </description>
    </item>
    
  </channel>
</rss>